# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration

# config/services.yaml
parameters:
    project_directory: '%kernel.project_dir%'

    imports:
        - - { resource: services_dev.yaml }
          - { resource: services_prod.yaml }
#        - { resource: services_dev.yaml, conditional: 'kernel.environment == "dev"' }
#        - { resource: services_prod.yaml, conditional: 'kernel.environment == "prod"'}

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    Symfony\Component\Dotenv\Command\:
        resource: '../vendor/symfony/dotenv/Command'
        tags: ['console.command']

    Symfony\Component\Dotenv\Command\DebugCommand:
        arguments:
            $projectDirectory: '%project_directory%'
            $kernelEnvironment: '%kernel.environment%'

    Symfony\Component\Dotenv\Command\DotenvDumpCommand:
        arguments:
            $projectDir: '%project_directory%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Service\MyErrorListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }


        # add more service definitions when explicit configuration is needed
        # please note that last definitions always *replace* previous ones

        #    doctrine.dbal.connection_factory:
        #        class: Doctrine\DBAL\Connection
        #        arguments:
        #            - { driver: 'pdo_mysql', url: '%env(resolve:DATABASE_URL)%' }
        #        arguments:
        #            - { driver: 'pdo_mysql', dbname: '%database_name%', user: '%database_user%', password: '%database_password%', host: '%database_host%', port: '%database_port%' }


    App\Service\ArticleAgregator:


    #    App\Service\DatabaseService:
    #       arguments:
    #            $dsn: '%env(DATABASE_DSN)%'
    #            $user: '%env(DATABASE_USER)%'
    #            $password: '%env(DATABASE_PASSWORD)%'

    App\Service\SourceService:
        arguments:
            $dsn: '%env(DATABASE_DSN)%'
            $user: '%env(DATABASE_USER)%'
            $password: '%env(DATABASE_PASSWORD)%'